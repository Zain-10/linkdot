{
  "editor.tabSize": 2,
  "editor.detectIndentation": false,
  "search.exclude": {
    "package-lock.json": true
  },
  "editor.defaultFormatter": "dbaeumer.vscode-eslint",
  "editor.formatOnSave": true,
  "editor.codeActionsOnSave": [
    "source.addMissingImports",
    "source.fixAll.eslint",
    "source.fixAll.format",
    "source.organizeImports"
  ],
  "jest.autoRun": {
    "watch": true, // Start the jest with the watch flag
    "onStartup": ["all-tests"] // Run all tests upon project launch
  },
  "jest.showCoverageOnLoad": true, // Show code coverage when the project is launched
  "jest.showTerminalOnLaunch": false, // Don't automatically open test explorer terminal on launch
  // Multiple language settings for json and jsonc files
  "[json][jsonc]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  // TODO HIGLIGHT SETTINGS
  "todohighlight.keywords": [
    {
      "text": "NOTE:", // with a regex pattern defined, this setting isn't used, but is useful as a name for this section
      "color": "#ff0000",
      "backgroundColor": "teal",
      "overviewRulerColor": "grey",
      "regex": {
        "pattern": "(?<=^|\"|\\s)NOTE[:]?(?!\\w)" // in this example, highlight `NOTE:` with or without the `:` and that's not part of another word.  (I.e.: The above will highlight 'NOTE' but not the "note" in 'SIDENOTE').
        /**
         * Positive lookbehind (`(?<=...)`) is only supported in Node.js v9 and up.
         * If your VSCode version is built on an earlier version the example above may not work. Simple tests:
         * Shouldm't work: note  deNOTEd  NOTEing
         * Should work: NOTE:  "NOTE:"
         **/
      },
      "isWholeLine": false
    },
    {
      "text": "QUESTION:",
      "color": "#FFFFFF",
      "backgroundColor": "purple",
      "overviewRulerColor": "grey",
      "regex": {
        "pattern": "(?<=^|\"|\\s)QUESTION[:]?(?!\\w)" // in this example, highlight `NOTE:` with or without the `:` and that's not part of another word.  (I.e.: The above will highlight 'NOTE' but not the "note" in 'SIDENOTE').
      },
      "isWholeLine": true
    },
    {
      "text": "NOTES:",
      "color": "#222831",
      "backgroundColor": "#A2D2FF",
      "overviewRulerColor": "grey",
      "regex": {
        "pattern": "(?<=^|\"|\\s)NOTES[:]?(?!\\w)" // in this example, highlight `NOTE:` with or without the `:` and that's not part of another word.  (I.e.: The above will highlight 'NOTE' but not the "note" in 'SIDENOTE').
      },
      "isWholeLine": false
    }
  ]
}
